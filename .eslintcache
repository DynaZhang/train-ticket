[{"/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/App.js":"1","/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/views/home/Journey/index.js":"2","/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/store/modules/home/actions.js":"3","/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/views/home/index.js":"4","/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/store/index.js":"5","/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/components/CitySelector/index.js":"6","/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/views/home/DepartDate/index.js":"7","/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/index.js":"8","/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/views/home/HighSpeed/index.js":"9","/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/store/modules/home/reducer.js":"10","/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/views/home/Submit/index.js":"11","/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/components/Header/index.js":"12","/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/store/modules/home/actionTypes.js":"13","/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/utils.js":"14"},{"size":787,"mtime":1610509485129,"results":"15","hashOfConfig":"16"},{"size":1059,"mtime":1610515783677,"results":"17","hashOfConfig":"16"},{"size":3043,"mtime":1610522855087,"results":"18","hashOfConfig":"16"},{"size":1502,"mtime":1610535964072,"results":"19","hashOfConfig":"16"},{"size":504,"mtime":1610510725553,"results":"20","hashOfConfig":"16"},{"size":5191,"mtime":1610530053680,"results":"21","hashOfConfig":"16"},{"size":929,"mtime":1610622387589,"results":"22","hashOfConfig":"16"},{"size":220,"mtime":1610508398708,"results":"23","hashOfConfig":"16"},{"size":166,"mtime":1610438490830,"results":"24","hashOfConfig":"16"},{"size":1457,"mtime":1610619223385,"results":"25","hashOfConfig":"16"},{"size":157,"mtime":1610438560523,"results":"26","hashOfConfig":"16"},{"size":622,"mtime":1610444638871,"results":"27","hashOfConfig":"16"},{"size":569,"mtime":1610443958309,"results":"28","hashOfConfig":"16"},{"size":267,"mtime":1610619117328,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"oj8do1",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/App.js",[],["61","62"],"/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/views/home/Journey/index.js",[],"/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/store/modules/home/actions.js",[],"/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/views/home/index.js",[],"/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/store/index.js",[],"/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/components/CitySelector/index.js",["63","64"],"import React, {useState, useMemo, useEffect, memo, useCallback} from \"react\";\nimport classnames from 'classnames';\nimport PropTypes from \"prop-types\";\nimport \"./style.css\";\n\nfunction CityItem(props) {\n  const {name, onSelect} = props\n  return (\n    <li className=\"city-li\" onClick={() => onSelect(name)}>{name}</li>\n  )\n}\nCityItem.propTypes = {\n  name: PropTypes.string,\n  onSelect: PropTypes.func\n}\n\nfunction CitySection(props) {\n  const {title, cities = [], onSelect} = props\n  return (\n    <ul className=\"city-ul\">\n      <li className={\"city-li\"} key=\"title\" data-cate={title}>{title}</li>\n      {\n        cities.map(item => (\n          <CityItem key={item.name} name={item.name} onSelect={onSelect} />\n        ))\n      }\n    </ul>\n  )\n}\nCitySection.propTypes = {\n  title: PropTypes.string,\n  cities: PropTypes.array,\n  onSelect: PropTypes.func\n}\n\nconst alphabet = Array.from(new Array(26), (ele,index) => {\n  return String.fromCharCode(65 + index)\n})\nconst AlphaIndex = memo((props) => {\n  const {alpha, clickItem} = props\n  return (\n    <div className={\"city-index-item\"} onClick={() => clickItem(alpha)}>{alpha}</div>\n  )\n})\nAlphaIndex.propTypes = {\n  alpha: PropTypes.string,\n  clickItem: PropTypes.func\n}\n\nfunction CityList(props) {\n  const {sections, onSelect, toAlpha} = props\n  return (\n    <div className={\"city-list\"}>\n      <div className=\"city-cate\">\n        {\n          sections.map(item => (\n            <CitySection title={item.title} cities={item.citys} onSelect={onSelect} key={item.title} />\n          ))\n        }\n      </div>\n      <div className=\"city-index\">\n        {\n          alphabet.map(item => (\n            <AlphaIndex key={item} alpha={item} clickItem={(item) => toAlpha(item)} />\n          ))\n        }\n      </div>\n    </div>\n  )\n}\nCityList.propTypes = {\n  sections: PropTypes.array,\n  onSelect: PropTypes.func\n}\n\nconst SuggestItem = memo((props) => {\n  const {name, clickItem} = props\n  return (\n    <li className=\"city-suggest-item\" onClick={() => clickItem(name)}>{name}</li>\n  )\n}, [])\nSuggestItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  clickItem: PropTypes.func.isRequired\n}\n\nfunction Suggest(props) {\n  const {searchKey, onSelect} = props\n  const [result, setResult] = useState([])\n  useEffect(() => {\n    fetch('http://localhost:5000/rest/search?key='+encodeURIComponent(searchKey)).then(response => {\n      return response.json()\n    }).then(jsonObj => {\n      console.log(jsonObj)\n      const {data:res, result:sKey} = jsonObj\n      console.log(res)\n      if (sKey === result) {\n        setResult(res)\n      }\n    })\n  }, [searchKey])\n  const fallBackResult = useMemo(() => {\n    console.log(result)\n    if (result.length === 0) {\n      return [{display: searchKey}]\n    }\n    return result\n  }, [result, searchKey])\n  return (\n    <div className=\"city-suggest\">\n      <ul className={\"city-suggest-ul\"}>\n        {\n          fallBackResult.map(item => (\n            <SuggestItem key={item.display} name={item.display} clickItem={() => {onSelect(item.display)}} />\n          ))\n        }\n      </ul>\n    </div>\n  )\n}\nSuggest.propTypes = {\n  searchKey: PropTypes.string.isRequired,\n  onSelect: PropTypes.func.isRequired\n}\n\n\nfunction CitySelectorComponent(props) {\n  const {show, isLoading, cityData, onBack, onSelect, fetchCityData } = props\n  const [searchKey, setSearchKey] = useState('')\n  const key = useMemo(() => {\n    return searchKey.trim()\n  }, [searchKey])\n  const citySelectorClass = classnames('city-selector', {\n    hidden: !show\n  })\n  const searchCleanClass = classnames('search-clean', {\n    hidden: key.length === 0\n  })\n  const toAlpha = useCallback((alpha) => {\n    console.log(`[data-cate='${alpha}']`)\n    document.querySelector(`[data-cate='${alpha}']`).scrollIntoView()\n  }, [])\n  const outputCitySections = () => {\n    if (isLoading) {\n      return (\n        <div>loading</div>\n      )\n    }\n    if (cityData) {\n      return (\n        <CityList sections={cityData} onSelect={onSelect} toAlpha={val => toAlpha(val)}/>\n      )\n    }\n    return (\n      <div>error</div>\n    )\n  }\n\n  useEffect(() => {\n    if (!show || cityData || isLoading) {\n      return\n    }\n    fetchCityData()\n  }, [show])\n\n  return (\n    <div className={citySelectorClass}>\n      <div className={\"city-search\"}>\n        <div className={\"search-back\"} onClick={() => onBack()}>\n          <svg width={42} height={42}>\n            <polyline points={\"25,13 16,21 25,29\"} stroke={\"#fff\"} strokeWidth={2} fill={\"none\"} />\n          </svg>\n        </div>\n        <div className=\"search-input-wrapper\">\n          <input type=\"text\" value={searchKey} className={\"search-input\"} placeholder={\"城市、车站的中文名或拼音\"} onChange={e => setSearchKey(e.target.value)}/>\n        </div>\n        <i className={searchCleanClass} onClick={() => setSearchKey('')}>&#xf063;</i>\n      </div>\n      {outputCitySections()}\n      {Boolean(key) && (<Suggest className searchKey={key} onSelect={key => onSelect(key)} />)}\n    </div>\n  )\n}\nCitySelectorComponent.propTypes = {\n  show: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  cityData: PropTypes.array,\n  onBack: PropTypes.func.isRequired\n}\n\nexport default CitySelectorComponent;\n","/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/views/home/DepartDate/index.js",[],"/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/index.js",[],["65","66"],"/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/views/home/HighSpeed/index.js",[],"/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/store/modules/home/reducer.js",[],"/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/views/home/Submit/index.js",[],"/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/components/Header/index.js",[],"/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/store/modules/home/actionTypes.js",[],"/Users/zhangzhulei/trains/frontEnd/react/train-ticket/src/utils.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":101,"column":6,"nodeType":"73","endLine":101,"endColumn":17,"suggestions":"74"},{"ruleId":"71","severity":1,"message":"75","line":164,"column":6,"nodeType":"73","endLine":164,"endColumn":12,"suggestions":"76"},{"ruleId":"67","replacedBy":"77"},{"ruleId":"69","replacedBy":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'result'. Either include it or remove the dependency array.","ArrayExpression",["81"],"React Hook useEffect has missing dependencies: 'cityData', 'fetchCityData', and 'isLoading'. Either include them or remove the dependency array.",["82"],["79"],["80"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},"Update the dependencies array to be: [result, searchKey]",{"range":"87","text":"88"},"Update the dependencies array to be: [cityData, fetchCityData, isLoading, show]",{"range":"89","text":"90"},[2580,2591],"[result, searchKey]",[4163,4169],"[cityData, fetchCityData, isLoading, show]"]